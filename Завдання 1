using System;

// Базовий клас Число
public class Number
{
    protected int numerator; // Лічильник
    protected int denominator; // Знаменник

    // Конструктор класу
    public Number(int numerator, int denominator)
    {
        this.numerator = numerator;
        this.denominator = denominator;
    }

    // Метод для виводу дробу на екран
    public override string ToString()
    {
        return $"{numerator}/{denominator}";
    }

    // Методи для арифметичних операцій: додавання, віднімання, множення і ділення
    public virtual Number Add(Number other)
    {
        int newNumerator = numerator * other.denominator + other.numerator * denominator;
        int newDenominator = denominator * other.denominator;
        return Simplify(new Number(newNumerator, newDenominator));
    }

    public virtual Number Subtract(Number other)
    {
        int newNumerator = numerator * other.denominator - other.numerator * denominator;
        int newDenominator = denominator * other.denominator;
        return Simplify(new Number(newNumerator, newDenominator));
    }

    public virtual Number Multiply(Number other)
    {
        int newNumerator = numerator * other.numerator;
        int newDenominator = denominator * other.denominator;
        return Simplify(new Number(newNumerator, newDenominator));
    }

    public virtual Number Divide(Number other)
    {
        int newNumerator = numerator * other.denominator;
        int newDenominator = denominator * other.numerator;
        return Simplify(new Number(newNumerator, newDenominator));
    }

    // Метод для спрощення дробу
    protected Number Simplify(Number number)
    {
        int gcd = GCD(number.numerator, number.denominator);
        return new Number(number.numerator / gcd, number.denominator / gcd);
    }

    // Метод для знаходження найбільшого спільного дільника (НСД)
    private int GCD(int a, int b)
    {
        while (b != 0)
        {
            int temp = b;
            b = a % b;
            a = temp;
        }
        return a;
    }

    // Перевизначення методів equals() та hashCode()
    public override bool Equals(object obj)
    {
        if (obj == null || GetType() != obj.GetType())
        {
            return false;
        }
        Number other = (Number)obj;
        return numerator == other.numerator && denominator == other.denominator;
    }

    public override int GetHashCode()
    {
        return HashCode.Combine(numerator, denominator);
    }
}

// Похідний клас Простий дріб
public class Fraction : Number
{
    // Конструктор класу
    public Fraction(int numerator, int denominator) : base(numerator, denominator)
    {
    }

    // Перевизначення методів для забезпечення коректності операцій з дробами
    public override Number Add(Number other)
    {
        if (other is Fraction fraction)
        {
            return base.Add(fraction);
        }
        throw new ArgumentException("Неможливо додати не-дріб до дробу.");
    }

    public override Number Subtract(Number other)
    {
        if (other is Fraction fraction)
        {
            return base.Subtract(fraction);
        }
        throw new ArgumentException("Неможливо відняти не-дріб від дробу.");
    }

    public override Number Multiply(Number other)
    {
        if (other is Fraction fraction)
        {
            return base.Multiply(fraction);
        }
        throw new ArgumentException("Неможливо перемножити дріб на не-дріб.");
    }

    public override Number Divide(Number other)
    {
        if (other is Fraction fraction)
        {
            if (fraction.numerator == 0)
            {
                throw new DivideByZeroException("Ділення на нуль не дозволено.");
            }
            return base.Divide(fraction);
        }
        throw new ArgumentException("Неможливо поділити дріб на не-дріб.");
    }
}

class Program
{
    static void Main(string[] args)
    {
        // Приклад використання класів
        Fraction fraction1 = new Fraction(1, 2);
        Fraction fraction2 = new Fraction(1, 3);

        Console.WriteLine("Дріб 1: " + fraction1);
        Console.WriteLine("Дріб 2: " + fraction2);

        Console.WriteLine("Додавання: " + fraction1.Add(fraction2));
        Console.WriteLine("Віднімання: " + fraction1.Subtract(fraction2));
        Console.WriteLine("Множення: " + fraction1.Multiply(fraction2));
        Console.WriteLine("Ділення: " + fraction1.Divide(fraction2));
    }
}
